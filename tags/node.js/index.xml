<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.Js on Zeneffy : journal de bord</title>
    <link>http://www.zeneffy.fr/tags/node/index.js/</link>
    <description>Recent content in Node.Js on Zeneffy : journal de bord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
    
    
    <lastBuildDate>Sun, 22 Jan 2012 15:41:38 &#43;0000</lastBuildDate>
    <atom:link href="http://www.zeneffy.fr/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Utiliser les versions 0.6.x de Nodejs sur Heroku</title>
      <link>http://www.zeneffy.fr/2012/01/utiliser-les-versions-0-6-x-de-nodejs-sur-heroku/</link>
      <pubDate>Sun, 22 Jan 2012 15:41:38 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2012/01/utiliser-les-versions-0-6-x-de-nodejs-sur-heroku/</guid>
      <description>&lt;p&gt;L&amp;rsquo;hébergeur &lt;a href=&#34;http://heroku.com&#34;&gt;heroku&lt;/a&gt; permet de mettre en place des applications &lt;a href=&#34;http://nodejs.org/&#34;&gt;nodejs&lt;/a&gt; depuis l&amp;rsquo;année dernière, toutefois par défaut la version est la 0.4.7 - version stable mais qui est devenue obsolète avec l&amp;rsquo;apparition des versions 0.6.x.&lt;/p&gt;

&lt;p&gt;Heureusement, il est possible très facilement de forcer la version - pour cela il suffit d&amp;rsquo;une part de rajouter un &amp;ldquo;buildpack&amp;rdquo; dans les variables d&amp;rsquo;environnement de votre application:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku config:add BUILDPACK_URL=https://github.com/heroku/heroku-buildpack-nodejs.git#versions
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;puis de modifier le fichier &lt;em&gt;packages.json&lt;/em&gt; pour rajouter une entrée &amp;ldquo;engines&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;name&amp;quot;: &amp;quot;monAppli&amp;quot;
  , &amp;quot;version&amp;quot;: &amp;quot;0.1.0&amp;quot;
  , &amp;quot;private&amp;quot;: true
  , &amp;quot;dependencies&amp;quot;: {
      &amp;quot;express&amp;quot;: &amp;quot;2.5.6&amp;quot;
    , &amp;quot;jade&amp;quot;: &amp;quot;0.20.0&amp;quot;
  },
  &amp;quot;engines&amp;quot;: {
    &amp;quot;node&amp;quot;: &amp;quot;0.6.x&amp;quot;,
    &amp;quot;npm&amp;quot;: &amp;quot;1.0.x&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis les classiques&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add .
git commit -m &amp;quot;passage en en 0.6&amp;quot;
git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Normalement vous devriez voir les lignes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-----&amp;gt; Heroku receiving push
-----&amp;gt; Fetching custom buildpack... done
-----&amp;gt; Node.js app detected
-----&amp;gt; Resolving engine versions
       Using Node.js version: 0.6.8
       Using npm version: 1.0.106
-----&amp;gt; Fetching Node.js binaries
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et voilà, votre application tourne en 0.6.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Instant de bonheur: une application complète node.js</title>
      <link>http://www.zeneffy.fr/2011/12/instant-de-bonheur-une-application-complete-node-js/</link>
      <pubDate>Tue, 27 Dec 2011 12:08:26 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/12/instant-de-bonheur-une-application-complete-node-js/</guid>
      <description>&lt;p&gt;M&amp;rsquo;intéressant depuis quelques temps à &lt;a href=&#34;http://nodejs.org/&#34;&gt;node.js&lt;/a&gt; (framework web basé sur le moteur javascript V8 de chrome), j&amp;rsquo;avais décidé de réaliser une petite application pour tester et me faire une opinion sur l&amp;rsquo;utilisation du javascript côté serveur - par un hasard extraordinaire j&amp;rsquo;ai eu l&amp;rsquo;occasion de trouver une idée et de la réaliser lors d&amp;rsquo;une formation, par ailleurs sans aucun rapport.&lt;/p&gt;

&lt;p&gt;Cela donne l&amp;rsquo;application web &lt;a href=&#34;http://mon.instant-de-bonheur.fr&#34;&gt;mon.instant-de-bonheur.fr&lt;/a&gt; qui permet de partager les petits (et grands!) moments de bonheur (sans aucun lien avec l&amp;rsquo;&lt;a href=&#34;http://programmes.france2.fr/leurs-secrets-du-bonheur/index.php?page=article&amp;amp;numsite=7085&amp;amp;id_article=24314&amp;amp;id_rubrique=7088&#34;&gt;émission de France2&lt;/a&gt;, quoique&amp;hellip;) et qui a été mise en ligne depuis quelques jours.&lt;/p&gt;

&lt;p&gt;Pour les geeks, j&amp;rsquo;ai pris soin (ou du moins essayé) de documenter mon code, évidemment publié en opensource (license Apache 2.0) afin que d&amp;rsquo;autres puissent peut-être en profiter pour monter en compétence sur les technologies javascript (node.js, jade, expressjs) et noSQL (à travers mongodb).&lt;/p&gt;

&lt;p&gt;Le code complet est disponible sur github via &lt;a href=&#34;https://github.com/jraigneau/instant&#34;&gt;github.com/jraigneau/instant&lt;/a&gt;, et la version commentée et mise en forme peut-être revue sur le site même de l&amp;rsquo;application via &lt;a href=&#34;http://mon.instant-de-bonheur.fr/about&#34;&gt;mon.instant-de-bonheur.fr/about&lt;/a&gt;. Le code est améliorable, modifiable et ne respecte probablement pas les standards mais &amp;ldquo;It works !&amp;rdquo; -  au passage je suis convaincu par l&amp;rsquo;utilisation de node.js: rapide, fiable et surtout très facile à utiliser pour un développeur même moyen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Node.js/Express sur heroku</title>
      <link>http://www.zeneffy.fr/2011/06/node-jsexpress-sur-heroku/</link>
      <pubDate>Mon, 27 Jun 2011 20:30:26 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/06/node-jsexpress-sur-heroku/</guid>
      <description>&lt;p&gt;Je suis en train de tester &lt;a href=&#34;http://nodejs.org/&#34;&gt;node.js&lt;/a&gt; ces derniers jours, et notamment le &lt;a href=&#34;http://expressjs.com/&#34;&gt;framework web Express&lt;/a&gt; - Fan de l&amp;rsquo;hébergeur &lt;a href=&#34;http://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;, d&amp;rsquo;autant plus depuis qu&amp;rsquo;il est possible d&amp;rsquo;avoir des applications &lt;a href=&#34;http://blog.heroku.com/archives/2011/5/31/celadon_cedar/&#34;&gt;node.js&lt;/a&gt; (entre autres), j&amp;rsquo;ai souhaité installer une application de test en suivant &lt;a href=&#34;http://pcoding.blogspot.com/2011/06/hebergement-nodejs-avec-heroku-celadon.html&#34;&gt;ce tutorial&lt;/a&gt; - et tout n&amp;rsquo;a pas fonctionné du premier coup :(&lt;/p&gt;

&lt;p&gt;En effet, pour créer mon squelette d&amp;rsquo;application &amp;ldquo;zen-hw&amp;rdquo;, j&amp;rsquo;ai utilisé la commande&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[julien.newton: zen-hw]$ express
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;qui crée par défaut une arborescence d&amp;rsquo;application Express - or par défaut le fichier app.js lancera la webapp via la commande&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app.listen(3000);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;qui fonctionne parfaitement en local (sauf si &lt;a href=&#34;http://pow.cx/&#34;&gt;pow&lt;/a&gt; est installé, mais c&amp;rsquo;est une autre histoire) mais pas sur heroku, avec un beau crash de l&amp;rsquo;application visible via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[julien.newton: zen-hw]$ heroku ps
Process       State               Command
------------  ------------------  ------------------------------
web.1         crashed for 8s      node app.js 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pour éviter ce point, il suffit de modifier app.js pour chaque application Express créée via la commande &lt;code&gt;_express_&lt;/code&gt; pour utiliser &lt;code&gt;_process.env.PORT_&lt;/code&gt;, ce qui donne à la fin du fichier:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var port = process.env.PORT || 3210;
app.listen(port, function(){
  console.log(&amp;quot;Listening on &amp;quot; + port);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;et voilà l&amp;rsquo;application fonctionne sous heroku !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>npm, le gestionnaire de package de node.js</title>
      <link>http://www.zeneffy.fr/2011/06/npm-le-gestionnaire-de-package-de-node-js/</link>
      <pubDate>Sun, 19 Jun 2011 06:54:20 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/06/npm-le-gestionnaire-de-package-de-node-js/</guid>
      <description>&lt;p&gt;Je suis en train de me documenter et de tester &lt;a href=&#34;http://nodejs.org&#34;&gt;node.js&lt;/a&gt;, un framework pour construire des applications réseaux (type serveur web, chat&amp;hellip;), basé d&amp;rsquo;une part sur le moteur &lt;a href=&#34;http://code.google.com/p/v8/&#34;&gt;javascript V8&lt;/a&gt; et conçu d&amp;rsquo;autre part pour être complètement asynchrone afin de gérer au mieux la concurrence.&lt;/p&gt;

&lt;p&gt;node.js bien que jeune a son propre gestionnaire de package &lt;a href=&#34;http://npmjs.org/&#34;&gt;npm&lt;/a&gt;, facile à installer et à utiliser. En bref ce qu&amp;rsquo;il faut retenir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installation de npm: &lt;code&gt;curl http://npmjs.org/install.sh | sh&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Installer un package en global (ne pas oublier le -g sinon le package s&amp;rsquo;installe dans le répertoire local: &lt;code&gt;npm install -g monpackage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Récupérer la liste des packages installés: &lt;code&gt;npm ls -g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mettre à jour tous les packages: &lt;code&gt;npm update&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour relier les packages dans une application node.js, il faut éditer le fichier &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;name&amp;quot;: &amp;quot;application-name&amp;quot;
  , &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;
  , &amp;quot;private&amp;quot;: true
  , &amp;quot;dependencies&amp;quot;: {
      &amp;quot;express&amp;quot;: &amp;quot;2.3.11&amp;quot;
    , &amp;quot;jade&amp;quot;: &amp;quot;0.12.2&amp;quot;
    , &amp;quot;less&amp;quot;: &amp;quot;1.1.2&amp;quot;
    , &amp;quot;mongoose&amp;quot;: &amp;quot;1.4.0&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;puis pour relier les packages au projet: &lt;code&gt;npm link&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pow &amp; Radiant</title>
      <link>http://www.zeneffy.fr/2011/06/pow-radiant/</link>
      <pubDate>Tue, 14 Jun 2011 20:51:30 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/06/pow-radiant/</guid>
      <description>&lt;p&gt;J&amp;rsquo;ai découvert dernièrement le serveur de développement &lt;a href=&#34;http://pow.cx/&#34;&gt;Pow&lt;/a&gt; qui permet très simplement de mettre en place un serveur Rack (pour les applications Ruby comme &lt;a href=&#34;http://www.sinatrarb.com/&#34;&gt;sinatra&lt;/a&gt; ou &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Rails&lt;/a&gt;) sur un Mac sans aucune configuration.&lt;/p&gt;

&lt;p&gt;Par contre il peut réserver quelques surprises de configuration, notamment avec &lt;a href=&#34;http://radiantcms.org/&#34;&gt;Radiant&lt;/a&gt;. Deux points à retenir (en tout cas jusqu&amp;rsquo;à présent:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Il faut désactiver le cache en développement sinon cela provoque des erreurs aléatoires de chargement des pages - dans &lt;code&gt;config/environements/development.rb&lt;/code&gt; mettre &lt;code&gt;config.cache_classes = true&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Il est nécessaire d&amp;rsquo;ajouter un fichier config.ru juste pour le développement et surtout ne pas le copier en production, sinon cela empèche les contenus statiques de s&amp;rsquo;afficher (images, css et javascripts donc!) avec un fichier &lt;code&gt;config.ru&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Rails.root/config.ru
require &amp;quot;./config/environment&amp;quot;
run ActionController::Dispatcher.new
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sinon, basé sur &lt;a href=&#34;http://nodejs.org/&#34;&gt;node.js&lt;/a&gt;, Pow est efficace et permet d&amp;rsquo;accéder à l&amp;rsquo;ensemble des applications en même temps via des url du type &lt;a href=&#34;http://monappli.dev:&#34;&gt;http://monappli.dev:&lt;/a&gt; je le recommande donc vivement pour se faciliter la vie de développeur Ruby.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>