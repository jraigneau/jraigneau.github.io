<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bdd on Zeneffy : journal de bord</title>
    <link>http://www.zeneffy.fr/tags/bdd/</link>
    <description>Recent content in Bdd on Zeneffy : journal de bord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
    
    
    <lastBuildDate>Tue, 27 Dec 2011 12:08:26 &#43;0000</lastBuildDate>
    <atom:link href="http://www.zeneffy.fr/tags/bdd/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Instant de bonheur: une application complète node.js</title>
      <link>http://www.zeneffy.fr/2011/12/instant-de-bonheur-une-application-complete-node-js/</link>
      <pubDate>Tue, 27 Dec 2011 12:08:26 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/12/instant-de-bonheur-une-application-complete-node-js/</guid>
      <description>&lt;p&gt;M&amp;rsquo;intéressant depuis quelques temps à &lt;a href=&#34;http://nodejs.org/&#34;&gt;node.js&lt;/a&gt; (framework web basé sur le moteur javascript V8 de chrome), j&amp;rsquo;avais décidé de réaliser une petite application pour tester et me faire une opinion sur l&amp;rsquo;utilisation du javascript côté serveur - par un hasard extraordinaire j&amp;rsquo;ai eu l&amp;rsquo;occasion de trouver une idée et de la réaliser lors d&amp;rsquo;une formation, par ailleurs sans aucun rapport.&lt;/p&gt;

&lt;p&gt;Cela donne l&amp;rsquo;application web &lt;a href=&#34;http://mon.instant-de-bonheur.fr&#34;&gt;mon.instant-de-bonheur.fr&lt;/a&gt; qui permet de partager les petits (et grands!) moments de bonheur (sans aucun lien avec l&amp;rsquo;&lt;a href=&#34;http://programmes.france2.fr/leurs-secrets-du-bonheur/index.php?page=article&amp;amp;numsite=7085&amp;amp;id_article=24314&amp;amp;id_rubrique=7088&#34;&gt;émission de France2&lt;/a&gt;, quoique&amp;hellip;) et qui a été mise en ligne depuis quelques jours.&lt;/p&gt;

&lt;p&gt;Pour les geeks, j&amp;rsquo;ai pris soin (ou du moins essayé) de documenter mon code, évidemment publié en opensource (license Apache 2.0) afin que d&amp;rsquo;autres puissent peut-être en profiter pour monter en compétence sur les technologies javascript (node.js, jade, expressjs) et noSQL (à travers mongodb).&lt;/p&gt;

&lt;p&gt;Le code complet est disponible sur github via &lt;a href=&#34;https://github.com/jraigneau/instant&#34;&gt;github.com/jraigneau/instant&lt;/a&gt;, et la version commentée et mise en forme peut-être revue sur le site même de l&amp;rsquo;application via &lt;a href=&#34;http://mon.instant-de-bonheur.fr/about&#34;&gt;mon.instant-de-bonheur.fr/about&lt;/a&gt;. Le code est améliorable, modifiable et ne respecte probablement pas les standards mais &amp;ldquo;It works !&amp;rdquo; -  au passage je suis convaincu par l&amp;rsquo;utilisation de node.js: rapide, fiable et surtout très facile à utiliser pour un développeur même moyen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sauvegarder une base de donnée PostgreSQL chez Heroku</title>
      <link>http://www.zeneffy.fr/2011/09/sauvegarder-une-base-de-donnee-postgresql-chez-heroku/</link>
      <pubDate>Mon, 19 Sep 2011 17:34:01 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/09/sauvegarder-une-base-de-donnee-postgresql-chez-heroku/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.heroku.com&#34;&gt;Heroku&lt;/a&gt; permet de faire très simplement des sauvegardes des bases de données de production en utilisant le module &lt;a href=&#34;http://addons.heroku.com/pgbackups&#34;&gt;PGBackups&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Il faut d&amp;rsquo;abord installer le module soit via l&amp;rsquo;IHM web , soit via la commande ((dans le répertoire de l&amp;rsquo;application):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku addons:add pgbackups
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis simplement lancer une sauvegarde:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku pgbackups:capture
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Une petite vérification s&amp;rsquo;impose:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku pgbackups
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;qui renvoie normalement:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;D   | Backup Time         | Size   | Database
-----+---------------------+--------+----------------
b001 | 2011/08/18 11:08.22 | 39.2KB | SHARED_DATABASE
b002 | 2011/09/19 10:24.04 | 40.2KB | SHARED_DATABASE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et finalement pour restaurer (avec b001 la base):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku pgbackups:restore DATABASE b001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rappelez vous que la sauvegarde reste l&amp;rsquo;un des meilleurs moyens de sécuriser vos données.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Les joies de datamapper</title>
      <link>http://www.zeneffy.fr/2011/04/les-joies-de-datamapper/</link>
      <pubDate>Sun, 24 Apr 2011 18:55:40 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/04/les-joies-de-datamapper/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://datamapper.org/&#34;&gt;Datamapper&lt;/a&gt; est un ORM (&lt;a href=&#34;http://en.wikipedia.org/wiki/Object-relational_mapping&#34;&gt;Object Relational Mapper&lt;/a&gt;) écrit en ruby et permettant de lier facilement Ruby à n&amp;rsquo;importe quelle base de données (mysql, postgresql&amp;hellip;).&lt;/p&gt;

&lt;p&gt;Grand fan de du framework web &lt;a href=&#34;http://www.sinatrarb.com/&#34;&gt;Sinatra&lt;/a&gt;, j&amp;rsquo;utilise souvent datamapper&amp;hellip;et je tombe souvent dans ses pièges:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Etre vigilant sur les relations 1-n ou n-n et sur l&amp;rsquo;utilisation des objets pour éviter de charger en mémoire des centaines de données inutiles (cela m&amp;rsquo;est arrivé sur Veilleur, voir le &lt;a href=&#34;http://www.zeneffy.fr/2011/03/rtfm&#34;&gt;post correspondant&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Vérifier systématiquement que les données sont bien sauvegardées: par défaut (c&amp;rsquo;est à dire sans l&amp;rsquo;option &lt;code&gt;#DataMapper::Model.raise_on_save_failure = true&lt;/code&gt;), aucun message ne prévient de l&amp;rsquo;erreur&lt;/li&gt;
&lt;li&gt;Mettre en place un système de pour récupérer les erreurs envoyées par Datamapper via notamment: &lt;code&gt;xx.errors.inspect&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ces quelques points simples permettent de gagner beaucoup de temps!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RTFM !!!</title>
      <link>http://www.zeneffy.fr/2011/03/rtfm/</link>
      <pubDate>Sun, 06 Mar 2011 21:09:06 &#43;0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/03/rtfm/</guid>
      <description>&lt;p&gt;Dans un &lt;a href=&#34;http://www.zeneffy.fr/2011/02/google-app-engine-une-emi-deception/&#34;&gt;billet précédent&lt;/a&gt;, je me plaignais de l&amp;rsquo;infrastructure google et en creusant un peu, j&amp;rsquo;ai découvert que mon problème venait de requête d&amp;rsquo;écriture à la base de donnée, qui à la première écriture de chaque session prenait jusqu&amp;rsquo;à 15 secondes.&lt;/p&gt;

&lt;p&gt;En regardant de près la documentation de &lt;a href=&#34;http://datamapper.org/&#34;&gt;datamapper&lt;/a&gt;, l&amp;rsquo;ORM utilisé pour &lt;a href=&#34;https://github.com/jraigneau/veilleur&#34;&gt;Veilleur&lt;/a&gt;, je me suis rendu que je n&amp;rsquo;utilisais pas correctement les requêtes avec les associations 1-n. En simplifiant, l&amp;rsquo;application récupérait la liste de toutes les valeurs des tests dans la base (1 toute les 10 minutes depuis 15 jours, faites le calcul&amp;hellip;) avant d&amp;rsquo;écrire la nouvelle valeur - ce qui était inutile et surtout gourmant (15secondes !)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Morale&lt;/strong&gt;: il faut bien lire les manuels et la documentation des frameworks, librairies&amp;hellip;utilisés dans son code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>