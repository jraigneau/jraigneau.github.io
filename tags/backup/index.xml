<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backup on Zeneffy : journal de bord</title>
    <link>http://www.zeneffy.fr/tags/backup/</link>
    <description>Recent content in Backup on Zeneffy : journal de bord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <copyright>&amp;#0169; 2008 - 2017, Julien Raigneau &amp;nbsp;&amp;nbsp;  | &amp;nbsp;&amp;nbsp;  Zeneffy &gt;&gt; Zen &amp;amp; Efficace</copyright>
    <lastBuildDate>Sat, 04 Apr 2015 20:17:05 +0100</lastBuildDate>
    
	<atom:link href="http://www.zeneffy.fr/tags/backup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Obiran versus synology</title>
      <link>http://www.zeneffy.fr/2015/04/obiran-vs-synology/</link>
      <pubDate>Sat, 04 Apr 2015 20:17:05 +0100</pubDate>
      
      <guid>http://www.zeneffy.fr/2015/04/obiran-vs-synology/</guid>
      <description>Depuis quelques mois, j’ai mis en oeuvre une nouvelle infrastructure chez moi de type homelab, basée sur un petit serveur intel NUC, ESXi et Ubuntu.
Comme tout bon exploitant avec des tendances devops, j’ai rajouté de la supervision avec NewRelic, divers scripts de contrôle, un dashboard basé sur dashing, l’installation automatisée de VM via ansible et évidemment je me suis ensuite attaqué à la problématique des sauvegardes.
De nombreuses solutions opensource existent déjà (amanda, bacula …) permettant entre autre d’avoir une architecture de type client-serveur.</description>
    </item>
    
    <item>
      <title>Sauvegarder une base de donnée PostgreSQL chez Heroku</title>
      <link>http://www.zeneffy.fr/2011/09/sauvegarder-une-base-de-donnee-postgresql-chez-heroku/</link>
      <pubDate>Mon, 19 Sep 2011 17:34:01 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/09/sauvegarder-une-base-de-donnee-postgresql-chez-heroku/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.heroku.com&#34;&gt;Heroku&lt;/a&gt; permet de faire très simplement des sauvegardes des bases de données de production en utilisant le module &lt;a href=&#34;http://addons.heroku.com/pgbackups&#34;&gt;PGBackups&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Il faut d&amp;rsquo;abord installer le module soit via l&amp;rsquo;IHM web , soit via la commande ((dans le répertoire de l&amp;rsquo;application):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku addons:add pgbackups
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis simplement lancer une sauvegarde:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku pgbackups:capture
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Une petite vérification s&amp;rsquo;impose:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SaveMyPrecious - Sauvegardes de fichier</title>
      <link>http://www.zeneffy.fr/2009/07/savemyprecious-sauvegardes-de-fichier/</link>
      <pubDate>Sat, 04 Jul 2009 14:45:05 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2009/07/savemyprecious-sauvegardes-de-fichier/</guid>
      <description>SaveMyPrecious remplace Saise et permet donc une sauvegarde incrémentale totale (chaque sauvegarde se suffit à elle même) distante via l&amp;rsquo;utilisation de la commande cp -al et de rsync. Les principes de base sont expliqués sur la page de présentation d&amp;rsquo;Obiran, le premier script de sauvegarde que j&amp;rsquo;ai écrit.
A l&amp;rsquo;inverse de Saise, SaveMyPrecious ne crypte pas les données, mais subit une nette amélioration de l&amp;rsquo;interface graphique.
Dépendances
Pour faire fonctionner SaveMyPrecious, il vous faut:</description>
    </item>
    
    <item>
      <title>Gestion d&#39;urgence de l&#39;énergie</title>
      <link>http://www.zeneffy.fr/2009/03/gestion-durgence-de-lenergie/</link>
      <pubDate>Thu, 26 Mar 2009 10:41:00 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2009/03/gestion-durgence-de-lenergie/</guid>
      <description>J&amp;rsquo;utilise un portable comme serveur, notamment pour diminuer consommation et bruit, mais cela a un autre avantage: la batterie du portable qui peut servir &amp;ldquo;d&amp;rsquo;onduleur&amp;rdquo; en cas de perte de courant.
J&amp;rsquo;ai donc conçu un script simple pour gérer les pertes d&amp;rsquo;énergie, et prendre le temps de lancer un arrêt propre du serveur si l&amp;rsquo;alimentation n&amp;rsquo;est toujours pas rétablie.
Dans /etc/acpi/events on crée un fichier ac_dc contenant:
event=ac_adapter.* action=/home/tifauve/scripts/acpi/battery/ac_dc.py %e  et voici le script ac_dc.</description>
    </item>
    
    <item>
      <title>SAISE - Sauvegarde Incrémentale Sécurisée</title>
      <link>http://www.zeneffy.fr/2008/09/saise-sauvegarde-incrementale-securisee/</link>
      <pubDate>Sat, 27 Sep 2008 09:23:21 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2008/09/saise-sauvegarde-incrementale-securisee/</guid>
      <description>SAISE est le digne successeur d&amp;rsquo;Obiran dont il reprend toutes les fonctionnalités, soit une sauvegarde incrémentale totale (chaque sauvegarde se suffit à elle même) distante via l&amp;rsquo;utilisation de la commande cp -al et de rsync. Les principes de base sont expliqués sur la page de présentation d&amp;rsquo;Obiran, lui-même disponible sur https://github.com/jraigneau/obiran.
SAISE apporte toutefois des différences importantes:
 SAISE est écrit en Python (contrairement à Obiran, en Ruby) SAISE utilise la librairie libnotify pour faire apparaître des notifications graphiques lors des backups (en option) SAISE a un système de log plus abouti Last but not least - SAISE permet de sécuriser les sauvegardes en cryptant à la volée les fichiers (à la demande de l&amp;rsquo;utilisateur)  Le système cryptage de SAISE</description>
    </item>
    
    <item>
      <title>Obiran - Outil de backup incrémental en Ruby</title>
      <link>http://www.zeneffy.fr/2008/05/obiran-outil-de-backup-incremental-en-ruby/</link>
      <pubDate>Mon, 12 May 2008 09:19:09 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2008/05/obiran-outil-de-backup-incremental-en-ruby/</guid>
      <description>A propos
Sauvegarder régulièrement les données est un réflexe à avoir car le monde numérique peut être impitoyable: imaginez toutes vos photos depuis 5 ans disparaissant suite à un disque dur cassé !
Le mieux est d&amp;rsquo;automatiser cette tâche, aussi j&amp;rsquo;ai développé OBIRAN - Outil de Backup Incrémental en Ruby (&amp;lsquo;Obiran Kenobi, vous êtes notre seul espoir&amp;rsquo; (Princesse Leila, Starwars IV) ).
Ce script en langage Ruby permet d&amp;rsquo;effectuer des sauvegardes incrémentales en utilisant rsync, ssh et cp.</description>
    </item>
    
  </channel>
</rss>