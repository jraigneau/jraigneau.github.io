<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Zeneffy : journal de bord</title>
    <link>http://www.zeneffy.fr/tags/python/</link>
    <description>Recent content in Python on Zeneffy : journal de bord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <copyright>&amp;#0169; 2008 - 2017, Julien Raigneau &amp;nbsp;&amp;nbsp;  | &amp;nbsp;&amp;nbsp;  Zeneffy &gt;&gt; Zen &amp;amp; Efficace</copyright>
    <lastBuildDate>Fri, 11 Mar 2011 17:10:17 +0000</lastBuildDate>
    
	<atom:link href="http://www.zeneffy.fr/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scripter MacOS</title>
      <link>http://www.zeneffy.fr/2011/03/scripter-macos/</link>
      <pubDate>Fri, 11 Mar 2011 17:10:17 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2011/03/scripter-macos/</guid>
      <description>&lt;p&gt;Dans ma très récente période Ubuntu/Linux, j&amp;rsquo;avais rédigé un petit script en python qui vérifiait régulièrement la présence de nouveaux fichiers dans un répertoire FTP - ce script étant basé sur GTK, il était nécessaire de le changer pour notamment utiliser &lt;a href=&#34;http://growl.info/&#34;&gt;Growl&lt;/a&gt;, le système de notification disponible dans MacOS.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redécouverte de Ruby On Rails</title>
      <link>http://www.zeneffy.fr/2010/04/redecouverte-de-ruby-on-rails/</link>
      <pubDate>Wed, 14 Apr 2010 14:00:33 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2010/04/redecouverte-de-ruby-on-rails/</guid>
      <description>Suite à des recherches sur les frameworks web du moment (python: Django, Turbogears, web.py, scala: lift, java: play!), je me suis réintéressé à l&amp;rsquo;un des premiers frameworks que j&amp;rsquo;avais utilisé (2003 / 2004 &amp;hellip;): Ruby on Rails.
J&amp;rsquo;ai redécouvert l&amp;rsquo;élégance et la simplicité de Ruby et la puissance de Rails.
Du coup, je me suis lancé un nouveau défi: créer une application de gestion des identités web - afin de ne plus oublier identifiant/mots de passe des sites où je suis inscrit (et il y en a!</description>
    </item>
    
    <item>
      <title>Harpagon: la version 1.1 &#34;Pingre&#34; est enfin sortie</title>
      <link>http://www.zeneffy.fr/2010/03/harpagon-la-version-1-1-pingre-est-enfin-sortie/</link>
      <pubDate>Sun, 07 Mar 2010 15:19:56 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2010/03/harpagon-la-version-1-1-pingre-est-enfin-sortie/</guid>
      <description>Harpagon est une petite application web permettant d&amp;rsquo;organiser et visualiser graphiquement ses dépenses - elle est basée sur le framework web.py et sur Google Chart API.
Nouveautés
 Contrôle des fichiers avant validation et traitement Mise en avant ce qui a été déjà dépensé par rapport à la moyenne mensuelle Simulation de ce qu&amp;rsquo;il reste à payer dans le mois au prorata des jours écoulés Meilleure gestion des chèques, notamment en mettant les numéros Constance du tri sur la liste de transaction lors des modifications de transaction Spinner sur le chargement de nouvelles données Listes déroulantes de catégorie trié alphabétiquement Couleurs des camenberts pour les catégories Tri sur listes Spinner lors du rejoue des règles Confirmation des suppressions de catégorie et règles  Où trouver Harpagon ?</description>
    </item>
    
    <item>
      <title>Supprimer tous les albums d&#39;un compte picasa web</title>
      <link>http://www.zeneffy.fr/2010/03/supprimer-tous-les-albums-dun-compte-picasa-web/</link>
      <pubDate>Mon, 01 Mar 2010 14:18:22 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2010/03/supprimer-tous-les-albums-dun-compte-picasa-web/</guid>
      <description>Un petit script pour supprimer en une seule opération tous les albums d&amp;rsquo;un compte picasa web - à utiliser avec modération !
il faut penser à installer l&amp;rsquo;API Google Picasa Web pour que cela fonctionne.
#!/usr/bin/python2.5 # -*- coding: utf-8 -*- import gdata.photos.service import gdata.media import gdata.geo #http://code.google.com/intl/fr/apis/picasaweb/developers_guide_protocol.html def get_albums(): email = &amp;quot;xx@gmail.com&amp;quot; pwd = &amp;quot;xxpwd&amp;quot; gd_client = gdata.photos.service.PhotosService() gd_client.email = email # Set your Picasaweb e-mail address... gd_client.password = pwd # .</description>
    </item>
    
    <item>
      <title>Harpagon V1.0</title>
      <link>http://www.zeneffy.fr/2010/01/harpagon-v1-0/</link>
      <pubDate>Sun, 17 Jan 2010 22:44:21 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2010/01/harpagon-v1-0/</guid>
      <description>Harpagon est une petite application web permettant d&amp;rsquo;organiser et visualiser graphiquement ses dépenses - elle est basée sur le framework web.py et sur Google Chart API.
Fonctionnalités de la 1.0
 Import de données de la BRED Tableau de bord fonctionnel avec stats sur 30j/3mois/Toutes dates Gestion des catégories et des règles de catégorisation Rejoue des règles possibles à tout moment Gestion des transactions  Captures d&amp;rsquo;écran
 
Où trouver Harpagon ?</description>
    </item>
    
    <item>
      <title>SaveMyPrecious - Sauvegardes de fichier</title>
      <link>http://www.zeneffy.fr/2009/07/savemyprecious-sauvegardes-de-fichier/</link>
      <pubDate>Sat, 04 Jul 2009 14:45:05 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2009/07/savemyprecious-sauvegardes-de-fichier/</guid>
      <description>SaveMyPrecious remplace Saise et permet donc une sauvegarde incrémentale totale (chaque sauvegarde se suffit à elle même) distante via l&amp;rsquo;utilisation de la commande cp -al et de rsync. Les principes de base sont expliqués sur la page de présentation d&amp;rsquo;Obiran, le premier script de sauvegarde que j&amp;rsquo;ai écrit.
A l&amp;rsquo;inverse de Saise, SaveMyPrecious ne crypte pas les données, mais subit une nette amélioration de l&amp;rsquo;interface graphique.
Dépendances
Pour faire fonctionner SaveMyPrecious, il vous faut:</description>
    </item>
    
    <item>
      <title>iPieuvre - Aggrégateur de contenus multimédia</title>
      <link>http://www.zeneffy.fr/2009/06/ipieuvre-aggregateur-de-contenus-multimedia/</link>
      <pubDate>Tue, 09 Jun 2009 09:40:36 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2009/06/ipieuvre-aggregateur-de-contenus-multimedia/</guid>
      <description>iPieuvre permet d&amp;rsquo;aggréger des contenus personnels hébergés sur PicasaWeb et sur YouTube (prochainement) via l&amp;rsquo;API Google Data.
iPieuvre se connecte sur tous les comptes fournis et récupère les url des images/vidéos via les flux ATOM pour créer ensuite des pages statiques html en utilisant le moteur de template Cheetah. Ce système permet de s&amp;rsquo;arranger de la limitation à 1Go de photos sur PicasaWeb.
iPieuvre fait actuellement tourner mon propre site de photo/multimédia:Instants de Vie (accès restreint).</description>
    </item>
    
    <item>
      <title>Gestion d&#39;urgence de l&#39;énergie</title>
      <link>http://www.zeneffy.fr/2009/03/gestion-durgence-de-lenergie/</link>
      <pubDate>Thu, 26 Mar 2009 10:41:00 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2009/03/gestion-durgence-de-lenergie/</guid>
      <description>J&amp;rsquo;utilise un portable comme serveur, notamment pour diminuer consommation et bruit, mais cela a un autre avantage: la batterie du portable qui peut servir &amp;ldquo;d&amp;rsquo;onduleur&amp;rdquo; en cas de perte de courant.
J&amp;rsquo;ai donc conçu un script simple pour gérer les pertes d&amp;rsquo;énergie, et prendre le temps de lancer un arrêt propre du serveur si l&amp;rsquo;alimentation n&amp;rsquo;est toujours pas rétablie.
Dans /etc/acpi/events on crée un fichier ac_dc contenant:
event=ac_adapter.* action=/home/tifauve/scripts/acpi/battery/ac_dc.py %e  et voici le script ac_dc.</description>
    </item>
    
    <item>
      <title>Catanyste</title>
      <link>http://www.zeneffy.fr/2009/02/catanyste/</link>
      <pubDate>Sun, 01 Feb 2009 09:33:18 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2009/02/catanyste/</guid>
      <description>Stratégies, Optimisations et IA pour le jeu de plateau les Colons de Catane
Le jeu de plateau les Colons de Catane a une dimension tactique et stratégique intéressante, l&amp;rsquo;optimisation d&amp;rsquo;acquisition des ressources étant primordiale pour contrebalancer les hasards des jets de dés.
L&amp;rsquo;objectif de Catanyste est de s&amp;rsquo;intéresser à la dimension statistique du jeu et finalement de créer une IA capable d&amp;rsquo;aider les joueurs, voire de les battre.
Le site du projet: http://code.</description>
    </item>
    
    <item>
      <title>SAISE - Sauvegarde Incrémentale Sécurisée</title>
      <link>http://www.zeneffy.fr/2008/09/saise-sauvegarde-incrementale-securisee/</link>
      <pubDate>Sat, 27 Sep 2008 09:23:21 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2008/09/saise-sauvegarde-incrementale-securisee/</guid>
      <description>SAISE est le digne successeur d&amp;rsquo;Obiran dont il reprend toutes les fonctionnalités, soit une sauvegarde incrémentale totale (chaque sauvegarde se suffit à elle même) distante via l&amp;rsquo;utilisation de la commande cp -al et de rsync. Les principes de base sont expliqués sur la page de présentation d&amp;rsquo;Obiran, lui-même disponible sur https://github.com/jraigneau/obiran.
SAISE apporte toutefois des différences importantes:
 SAISE est écrit en Python (contrairement à Obiran, en Ruby) SAISE utilise la librairie libnotify pour faire apparaître des notifications graphiques lors des backups (en option) SAISE a un système de log plus abouti Last but not least - SAISE permet de sécuriser les sauvegardes en cryptant à la volée les fichiers (à la demande de l&amp;rsquo;utilisateur)  Le système cryptage de SAISE</description>
    </item>
    
    <item>
      <title>Photo2Web</title>
      <link>http://www.zeneffy.fr/2008/05/photo2web/</link>
      <pubDate>Mon, 26 May 2008 20:19:39 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2008/05/photo2web/</guid>
      <description>Ce script écrit Python permet d&amp;rsquo;envoyer des photos extraites via Picasa sur un site FTP, le tout avec une interface graphique GTK2.
C&amp;rsquo;est mon premier développement &amp;ldquo;important&amp;rdquo; en Python - il m&amp;rsquo;a permis notamment de voir:
 Interface graphique et GTK2 et utilisation de Glade. Utilisation de la librairie ftplib. Mécanique des threads dans une IHM.  Il reste fortement améliorable, notamment en ce qui concerne la gestion des exceptions (try&amp;hellip;except).</description>
    </item>
    
    <item>
      <title>CheckMyFTP</title>
      <link>http://www.zeneffy.fr/2008/05/checkmyftp/</link>
      <pubDate>Mon, 19 May 2008 19:41:51 +0000</pubDate>
      
      <guid>http://www.zeneffy.fr/2008/05/checkmyftp/</guid>
      <description>Ce script simple vérifie s&amp;rsquo;il y a du contenu sur un site FTP et dans ce cas affiche une image. Ce script est le préambule à Photo2Web avec GUI et utilisation de ftplib.
#!/usr/bin/python # -*- coding: utf8 -*- &amp;quot;&amp;quot;&amp;quot; Vérifie si du nouveau contenu a été rajouté sur le FTP &amp;quot;&amp;quot;&amp;quot; import ftplib import pygtk,gtk pygtk.require(&#39;2.0&#39;) import os,sys try: session = ftplib.FTP(&#39;XXX&#39;,&#39;XXX&#39;,&#39;XXX&#39;) # On se connecte au serveur fileList = [] # La liste des fichiers sera dedans session.</description>
    </item>
    
  </channel>
</rss>